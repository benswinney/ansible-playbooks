# Run the setup effort to build an OCP Bastion guest
- name: Create guest for OCP Bastion
  hosts: 127.0.0.1
  connection: local
  vars:
  - directory_entry: "{{ lookup('template', '{{ playbook_dir }}/local-playbooks/roles/create-guest-for-linux/templates/guest.direct.j2') }}"
  roles:
  - "{{ playbook_dir }}/local-playbooks/roles/create-guest-for-linux"

- name: Configure Squid on the OCP Bastion
  hosts: s390x_bastion_workstation
  roles:
  - "{{ playbook_dir }}/local-playbooks/roles/configure-squid"

- name: Create a local Certificate Authority
  hosts: s390x_bastion_workstation
  roles:
  - "{{ playbook_dir }}/local-playbooks/roles/create-local-ca"

- name: Configure apache to serve the Web interface (LDAP Tools, etc)
  hosts: s390x_bastion_workstation
  roles:
  - "{{ playbook_dir }}/local-playbooks/roles/setup-web-resources"

- name: configure minimal dns server
  hosts: s390x_bastion_workstation
  roles:
  - "{{ playbook_dir }}/multiarch-ci-playbooks/playbooks/examples/roles/configure-dns"

- name: configure minimal haproxy server
  hosts: s390x_bastion_workstation
  roles:
  - "{{ playbook_dir }}/local-playbooks/roles/configure-haproxy"

- name: configure haproxy server to offer statistics interface
  hosts: s390x_bastion_workstation
  roles:
  - "{{ playbook_dir }}/local-playbooks/roles/enable-haproxy-stats"

- name: enable the Cockpit socket, using a local-CA certificate
  hosts: s390x_bastion_workstation
  roles:
  - "{{ playbook_dir }}/local-playbooks/roles/configure-cockpit"

# configures minimal httpd server to serve ignition configs
- name: Configure apache to serve ignition configs
  hosts: s390x_bastion_workstation
  roles:
  - "{{ playbook_dir }}/local-playbooks/roles/configure-apache-ignition"
  vars:
    bootfile_dest: "/var/www/html/bootfiles/"

# Perform the final setup
- name: Finalise the OCP Bastion setup
  hosts: s390x_bastion_workstation
  roles:
  - "{{ playbook_dir }}/local-playbooks/roles/setup-ocp-deployer"
